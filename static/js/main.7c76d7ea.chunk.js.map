{"version":3,"sources":["components/Home.js","components/Login.js","components/Logout.js","components/NavigationBar.js","components/Header.js","components/Footer.js","QuizPage.js","App.js","reportWebVitals.js","index.js"],"names":["Home","history","useHistory","useState","flowers","setFlowers","createRows","size","length","rows","i","push","mapFlowers","row","cells","Figure","Image","src","picture","width","height","onClick","imageIndex","pathname","state","flowerIndex","Caption","name","useEffect","fetch","apiHost","then","response","json","x","catch","e","console","log","Row","Col","Table","responsive","Login","props","username","setUsername","email","setEmail","password","setPass","Form","onSubmit","trim","onLoggedIn","Group","controlId","Label","Control","type","placeholder","onChange","event","target","value","Text","className","Button","variant","Logout","localStorage","removeItem","onLoggedOut","NavigationBar","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","Link","to","Header","style","textAlign","Footer","Date","getFullYear","Quiz","currentQuestion","setCurrentQuestion","displayScore","setDisplayScore","flowerNum","setFlowerNum","score","setScore","quiz","setQuiz","setMessage","location","quizNum","num","toString","getQuiz","class","points","getItem","quizId","method","headers","body","JSON","stringify","preventDefault","fluid","options","answer","next","onOptionClick","choices","multipleChoice","App","Container","exact","path","component","setItem","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7c76d7ea.chunk.js","sourcesContent":["//import { Link } from 'react-router-dom';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Table from 'react-bootstrap/Table';\r\nimport Figure from 'react-bootstrap/Figure';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\n\r\n\r\nfunction Home(){\r\n    let apiHost = \"https://jarrettpage-imagequiz.herokuapp.com\";\r\n    const history = useHistory();\r\n    const [flowers, setFlowers] = useState([]);\r\n\r\n\r\n    let getFlowers = () => {\r\n        return fetch(apiHost + '/flowers')\r\n        .then(response => response.json());\r\n    }\r\n\r\n    function tableCreator() {\r\n        return (\r\n                <tbody>\r\n                    {createRows()}\r\n                </tbody>\r\n        );\r\n    }\r\n\r\n    function createRows() {\r\n        let size = flowers.length / 9;\r\n        let rows = [];\r\n        for (let i = 0; i < size; i++){\r\n            rows.push(<tr>\r\n                {mapFlowers(i)}\r\n            </tr>)\r\n        }\r\n        return rows;\r\n    }\r\n    \r\n    function mapFlowers(row) {\r\n        let cells = [];\r\n        for (let i = 0 + (row * 9); i < 9 + (row * 9); i++){\r\n            cells.push(<td>\r\n                <Figure>\r\n                    <Figure.Image src={flowers[i].picture} width={200} height={200} onClick={() => quizLink(i)} />\r\n                    <Figure.Caption>{flowers[i].name}</Figure.Caption>\r\n                </Figure>\r\n            </td>)\r\n        }\r\n        return cells;\r\n    }\r\n\r\n    function quizLink(imageIndex) {\r\n        history.push({\r\n            pathname: '/quiz',\r\n            state: {flowerIndex: imageIndex}\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(flowers.length === 0) {\r\n            getFlowers()\r\n            .then(x => setFlowers(x))\r\n            .catch(e => console.log(e));\r\n        }\r\n    });\r\n\r\n    return (\r\n        <Row><Col>\r\n            <h2>This is the Home Page.</h2>\r\n            <Table responsive>\r\n                {tableCreator()}\r\n            </Table>\r\n        </Col></Row>\r\n    );\r\n}\r\n\r\nexport default Home;","import Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useState } from 'react';\r\n\r\nfunction Login(props) {\r\n    const history = useHistory();\r\n    const [username, setUsername] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPass] = useState('');\r\n\r\n    let loginSubmit = () => {\r\n        if(email.trim().length === 0 || password.trim().length === 0){\r\n            return;\r\n        }\r\n        props.onLoggedIn(username);\r\n        history.push('/');\r\n    }\r\n\r\n    let onNameChange = (event) => {\r\n        setUsername(event.target.value);\r\n    }\r\n\r\n    let onEmailChange = (event) => {\r\n        setEmail(event.target.value);\r\n    }\r\n\r\n    let onPasswordChange = (event) => {\r\n        setPass(event.target.value);\r\n    }\r\n\r\n    return (\r\n        <Form onSubmit={loginSubmit}>\r\n            <Form.Group controlId=\"formBasicName\">\r\n                <Form.Label>Username</Form.Label>\r\n                <Form.Control type=\"username\" placeholder=\"Enter username\" onChange={onNameChange}/>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n                <Form.Label>Email address</Form.Label>\r\n                <Form.Control type=\"email\" placeholder=\"Enter email\" onChange={onEmailChange}/>\r\n                <Form.Text className=\"text-muted\">\r\n                    We'll never share your email with anyone else.\r\n                </Form.Text>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formBasicPassword\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control type=\"password\" placeholder=\"Password\" onChange={onPasswordChange}/>\r\n            </Form.Group>\r\n            <Button variant=\"primary\" type=\"submit\">\r\n                Submit\r\n            </Button>\r\n        </Form>\r\n\r\n    );\r\n}\r\n\r\nexport default Login;","import Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction Logout(props) {\r\n    const history = useHistory();\r\n\r\n    let logOff = () => {\r\n        localStorage.removeItem('username');\r\n        props.onLoggedOut();\r\n        history.push('/');\r\n    }\r\n\r\n    let cancel = () => {\r\n        history.push('/');\r\n    }\r\n\r\n    return(\r\n        <Form>\r\n            <Form.Label>Are you sure you want to log out?</Form.Label>\r\n            <Button onClick={logOff}>\r\n                Yes\r\n            </Button>\r\n            <Button onClick={cancel}>\r\n                Cancel\r\n            </Button>\r\n        </Form>\r\n    );\r\n}\r\n\r\nexport default Logout;","import { Link } from 'react-router-dom';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\n\r\nfunction NavigationBar(props) {\r\n    return (\r\n        <Navbar bg=\"light\" expand=\"lg\">\r\n            <Navbar.Brand href=\"#home\">ImageQuiz</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                <Nav className=\"mr-auto\">\r\n                    <Nav.Link><Link to=\"/\">Home</Link></Nav.Link>\r\n                    <Nav.Link>{props.username !== \"\" ? (<Link to=\"/logout\">{props.username}, Logout</Link>) : <Link to=\"/login\">Login</Link>}</Nav.Link>\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    );\r\n}\r\n\r\nexport default NavigationBar;","import Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nfunction Header(){\r\n    return (\r\n        <Row><Col>\r\n            <h2 style={{textAlign: \"center\"}}>Welcome to ImageQuiz React App!</h2>\r\n        </Col></Row>\r\n    );\r\n}\r\n\r\nexport default Header;","import Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nfunction Footer(){\r\n    return (\r\n        <Row><Col>\r\n            <div>ImageQuiz &copy; Copyright {new Date().getFullYear()}, All Rights Reserved.</div>\r\n        </Col></Row>\r\n    );\r\n}\r\n\r\nexport default Footer;","//import quizzes from './quizzes/data';\r\n//import {flowerName} from './components/Home';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n//import Card from 'react-bootstrap/Card';\r\n//import CardGroup from 'react-bootstrap/CardGroup';\r\nimport Image from 'react-bootstrap/Image';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\n\r\nfunction Quiz(props){\r\n    let apiHost = \"https://jarrettpage-imagequiz.herokuapp.com\";\r\n\r\n    const history = useHistory();\r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n\tconst [displayScore, setDisplayScore] = useState(false);\r\n    const [flowerNum, setFlowerNum] = useState(-1);\r\n\tconst [score, setScore] = useState(0);\r\n    const [quiz, setQuiz] = useState([]);\r\n    //const [userName, setUserName] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    \r\n    /*\r\n    let getQuizzes = () => {\r\n        return fetch(apiHost + '/quizzes')\r\n        .then(response => response.json());\r\n    }\r\n    */\r\n    let getQuiz = (quizNum) => {\r\n        let num = quizNum.toString();\r\n        return fetch(apiHost + '/quiz/' + num)\r\n        .then(response => response.json());\r\n    }\r\n    \r\n    let addScore = (points) => {\r\n        return fetch(apiHost + '/score', {\r\n            method: 'post',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(points)\r\n        });\r\n    }\r\n/*\r\n    let userNameChanged = (event) => {\r\n        setUserName(event.target.value);\r\n    }\r\n*/\r\n    let submit = (event) => {\r\n        let username = localStorage.getItem('username');\r\n        let userScore = {score: score, quizId: flowerNum, username: username};\r\n        addScore(userScore)\r\n        .then(() => {\r\n            setMessage('User score was added successfully.');\r\n        })\r\n        .catch(e => setMessage('Score was unable to be added.'));\r\n        event.preventDefault();\r\n    }\r\n\r\n    function onOptionClick(answer) {\r\n\t\tif (answer === quiz[currentQuestion].answer) {\r\n\t\t\tsetScore(score + 1);\r\n\t\t}\r\n\r\n\t\tconst next = currentQuestion + 1;\r\n\t\tif (next < 6) {\r\n\t\t\tsetCurrentQuestion(next);\r\n\t\t} else {\r\n\t\t\tsetDisplayScore(true);\r\n\t\t}\r\n\t};\r\n\r\n    function multipleChoice() {\r\n        let options = [];\r\n        for(let i = 0; i < quiz[currentQuestion].choices.length; i++){\r\n            options.push(\r\n                <button onClick={() => onOptionClick(quiz[currentQuestion].choices[i])}>\r\n                    {quiz[currentQuestion].choices[i]}\r\n                </button>\r\n            )\r\n        }\r\n        return options;\r\n    }\r\n\r\n    function restart() {\r\n        setCurrentQuestion(0);\r\n        setScore(0);\r\n        setDisplayScore(false);\r\n    }\r\n\r\n    function backToHome() {\r\n        history.push('/');\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(quiz.length === 0) {\r\n            setFlowerNum(props.location.state.flowerIndex);\r\n            getQuiz(flowerNum)\r\n            .then(x => {setQuiz(x); console.log(x)})\r\n            .catch(e => console.log(e));\r\n        }\r\n    });\r\n\r\n    return (\r\n        <Row><Col>\r\n            <h2>Flower Quiz</h2>\r\n            <div class=\"imageQuiz\">\r\n\t\t\t{displayScore ? (\r\n\t\t\t\t<div class=\"results\">\r\n                    <Form onSubmit={submit}>\r\n                        <Form.Label>\r\n\t\t\t\t\t    Your score was {score} / 6.\r\n                        </Form.Label>\r\n                        <Button variant=\"primary\" type=\"submit\">\r\n                            Submit\r\n                        </Button>\r\n                    </Form>\r\n                        <div class=\"again\">\r\n                            <button onClick={() => backToHome()}>\r\n                                Different Quiz\r\n                            </button>\r\n                            <button onClick={() => restart()}>\r\n                                Retry\r\n                            </button>\r\n                        </div>\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n                <>\r\n                {(quiz.length === 0) ? ('') :\r\n                <>\r\n\t\t\t\t\t<div class=\"questions\">\r\n\t\t\t\t\t\t<div class=\"image\">\r\n\t\t\t\t\t\t\t<Image src={quiz[currentQuestion].picture} fluid />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"choices\">\r\n\t\t\t\t\t\t{multipleChoice()}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n                }\r\n                </>\r\n            )}\r\n\t\t</div>\r\n        </Col></Row>\r\n    );\r\n}\r\nexport default Quiz;","import { HashRouter, Switch, Route } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n//import logo from './logo.svg';\nimport './App.css';\nimport Container from 'react-bootstrap/Container';\nimport Home from './components/Home';\nimport Login from './components/Login';\nimport Logout from './components/Logout';\nimport NavigationBar from './components/NavigationBar';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Quiz from './QuizPage';\nimport { useState } from 'react';\n\nfunction App() {\n  const [username, setUsername] = useState(localStorage.getItem('username') || '');\n\n  let onLoggedIn = (email) => {\n      localStorage.setItem('username', email);\n      setUsername(email);\n  }\n\n  let onLoggedOut = () => {\n    setUsername('');\n  }\n\n  return (\n    <HashRouter>\n      <Container fluid>\n        <Header />\n        <NavigationBar username={username}/>\n        <Switch>\n          <Route exact path=\"/\" component={Home}/>\n          <Route path=\"/login\">\n            <Login onLoggedIn={onLoggedIn} />\n          </Route>\n          <Route path=\"/logout\">\n            <Logout onLoggedOut={onLoggedOut} />\n          </Route>\n          <Route path=\"/quiz\" component={Quiz}/>\n        </Switch>\n        <Footer />\n      </Container>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}